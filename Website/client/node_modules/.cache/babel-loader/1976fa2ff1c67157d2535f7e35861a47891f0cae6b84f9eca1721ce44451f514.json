{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Documents\\\\HeyHiJob\\\\Website\\\\client\\\\src\\\\page\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  // Using state hooks to manage messages and input\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const handleSend = async () => {\n    if (input.trim() !== '') {\n      // Add user message to the chat\n      setMessages([...messages, {\n        text: input,\n        sender: 'user'\n      }]);\n      try {\n        // Make a POST request to the backend\n        const response = await fetch('http://127.0.0.1', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json' // Correct header\n          },\n          body: JSON.stringify({\n            message: input\n          }) // Sending input message to backend\n        });\n\n        // Ensure response is ok and parse JSON\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json(); // Parse the JSON response\n\n        // Add bot's response to the chat\n        const botMessage = {\n          text: data.response,\n          sender: 'bot'\n        };\n        setMessages(prevMessages => [...prevMessages, botMessage]);\n      } catch (error) {\n        // Handle any errors that occur during the fetch request\n        const errorMessage = {\n          text: 'Network error: ' + error.message,\n          sender: 'bot'\n        };\n        setMessages(prevMessages => [...prevMessages, errorMessage]);\n      }\n      setInput(''); // Clear the input field after sending\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uploadPDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-box\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-bubble ${message.sender}`,\n          children: message.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Type a message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSend,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"HDAtGPGcvWga1zf1TBXg51T+tsc=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Home","_s","messages","setMessages","input","setInput","handleSend","trim","text","sender","response","fetch","method","headers","body","JSON","stringify","message","ok","Error","status","data","json","botMessage","prevMessages","error","errorMessage","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Documents/HeyHiJob/Website/client/src/page/Home.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Home = () => {\r\n  // Using state hooks to manage messages and input\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n\r\n  const handleSend = async () => {\r\n    if (input.trim() !== '') {\r\n      // Add user message to the chat\r\n      setMessages([...messages, { text: input, sender: 'user' }]);\r\n\r\n      try {\r\n        // Make a POST request to the backend\r\n        const response = await fetch('http://127.0.0.1', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',  // Correct header\r\n          },\r\n          body: JSON.stringify({ message: input }),  // Sending input message to backend\r\n        });\r\n\r\n        // Ensure response is ok and parse JSON\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();  // Parse the JSON response\r\n\r\n        // Add bot's response to the chat\r\n        const botMessage = { text: data.response, sender: 'bot' };\r\n        setMessages(prevMessages => [...prevMessages, botMessage]);\r\n\r\n      } catch (error) {\r\n        // Handle any errors that occur during the fetch request\r\n        const errorMessage = { text: 'Network error: ' + error.message, sender: 'bot' };\r\n        setMessages(prevMessages => [...prevMessages, errorMessage]);\r\n      }\r\n\r\n      setInput('');  // Clear the input field after sending\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className='uploadPDF'></div>\r\n      <div className=\"chat-container\">\r\n        <div className=\"chat-box\">\r\n          {/* Loop through messages and display them in the chat */}\r\n          {messages.map((message, index) => (\r\n            <div key={index} className={`chat-bubble ${message.sender}`}>\r\n              {message.text}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"input-box\">\r\n          <input\r\n            type=\"text\"\r\n            value={input}\r\n            onChange={e => setInput(e.target.value)}\r\n            placeholder=\"Type a message...\"\r\n          />\r\n          <button onClick={handleSend}>Send</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}