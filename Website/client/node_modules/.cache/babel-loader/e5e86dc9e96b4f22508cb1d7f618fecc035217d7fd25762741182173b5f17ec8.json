{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Documents\\\\HeyHiJob\\\\Website\\\\client\\\\src\\\\page\\\\MCQPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MCQPage = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [error, setError] = useState(null);\n  const [numQuestions, setNumQuestions] = useState('');\n  const [subject, setSubject] = useState('');\n  const [selectedOptions, setSelectedOptions] = useState({});\n  const [feedbacks, setFeedbacks] = useState({});\n  const handleResponse = data => {\n    const formattedQuestions = Object.values(data).map(q => ({\n      question: q.mcq,\n      options: Object.entries(q.options).map(([key, value]) => ({\n        key,\n        value\n      })),\n      correct: q.correct\n    }));\n    setQuestions(formattedQuestions);\n  };\n  const handleFetchQuestion = () => {\n    fetch('http://127.0.0.1:5000/question', {\n      method: \"POST\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        numQuestions,\n        subject\n      })\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(\"network response not ok\");\n      }\n      return response.json();\n    }).then(data => {\n      handleResponse(data);\n    }).catch(error => {\n      setError(error.message);\n      console.log(\"Error fetching question: \", error);\n    });\n  };\n  const handleOptionClick = (questionIndex, optionKey, correctAnswer) => {\n    // Set the selected option and feedback for the specific question\n    setSelectedOptions(prev => ({\n      ...prev,\n      [questionIndex]: optionKey\n    }));\n    setFeedbacks(prev => ({\n      ...prev,\n      [questionIndex]: optionKey === correctAnswer ? \"Correct!\" : \"It is not correct!\"\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: numQuestions,\n      onChange: e => setNumQuestions(e.target.value),\n      placeholder: \"Enter number of questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: subject,\n      onChange: e => setSubject(e.target.value),\n      placeholder: \"Enter subject of questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFetchQuestion,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this), questions.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading questions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this) : questions.map((q, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [index + 1, \") \", q.question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: q.options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleOptionClick(index, option.key, q.correct),\n          children: option.value\n        }, option.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), selectedOptions[index] && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Feedback: \", feedbacks[index]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(MCQPage, \"abuVnPGEkG1ld+CNDZPcT0i3Okw=\");\n_c = MCQPage;\nexport default MCQPage;\nvar _c;\n$RefreshReg$(_c, \"MCQPage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","MCQPage","_s","questions","setQuestions","error","setError","numQuestions","setNumQuestions","subject","setSubject","selectedOptions","setSelectedOptions","feedbacks","setFeedbacks","handleResponse","data","formattedQuestions","Object","values","map","q","question","mcq","options","entries","key","value","correct","handleFetchQuestion","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","json","catch","message","console","log","handleOptionClick","questionIndex","optionKey","correctAnswer","prev","children","type","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","index","option","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Documents/HeyHiJob/Website/client/src/page/MCQPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst MCQPage = () => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [numQuestions, setNumQuestions] = useState('');\r\n  const [subject, setSubject] = useState('');\r\n  const [selectedOptions, setSelectedOptions] = useState({});\r\n  const [feedbacks, setFeedbacks] = useState({});\r\n\r\n  const handleResponse = (data) => {\r\n    const formattedQuestions = Object.values(data).map(q => ({\r\n      question: q.mcq,\r\n      options: Object.entries(q.options).map(([key, value]) => ({\r\n        key,\r\n        value\r\n      })),\r\n      correct: q.correct\r\n    }));\r\n    setQuestions(formattedQuestions);\r\n  };\r\n\r\n  const handleFetchQuestion = () => {\r\n    fetch('http://127.0.0.1:5000/question', {\r\n      method: \"POST\",\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        numQuestions,\r\n        subject,\r\n      }),\r\n    })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error(\"network response not ok\");\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        handleResponse(data);\r\n      })\r\n      .catch(error => {\r\n        setError(error.message);\r\n        console.log(\"Error fetching question: \", error);\r\n      });\r\n  };\r\n\r\n  const handleOptionClick = (questionIndex, optionKey, correctAnswer) => {\r\n    // Set the selected option and feedback for the specific question\r\n    setSelectedOptions(prev => ({\r\n      ...prev,\r\n      [questionIndex]: optionKey\r\n    }));\r\n\r\n    setFeedbacks(prev => ({\r\n      ...prev,\r\n      [questionIndex]: optionKey === correctAnswer ? \"Correct!\" : \"It is not correct!\"\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        value={numQuestions}\r\n        onChange={(e) => setNumQuestions(e.target.value)}\r\n        placeholder='Enter number of questions'\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        value={subject}\r\n        onChange={(e) => setSubject(e.target.value)}\r\n        placeholder='Enter subject of questions'\r\n      />\r\n      <button onClick={handleFetchQuestion}>Upload</button>\r\n\r\n      {error && <p>Error: {error}</p>}\r\n      {questions.length === 0 ? (\r\n        <p>Loading questions...</p>\r\n      ) : (\r\n        questions.map((q, index) => (\r\n          <div key={index}>\r\n            <h3>{index + 1}) {q.question}</h3>\r\n            <ul>\r\n              {q.options.map(option => (\r\n                <button\r\n                  key={option.key}\r\n                  onClick={() => handleOptionClick(index, option.key, q.correct)}\r\n                >\r\n                  {option.value}\r\n                </button>\r\n              ))}\r\n            </ul>\r\n            {selectedOptions[index] && (\r\n              <p>Feedback: {feedbacks[index]}</p>\r\n            )}\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MCQPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}