{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Documents\\\\HeyHiJob\\\\Website\\\\client\\\\src\\\\page\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  // get set function using useState function!\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const handleSend = async () => {\n    if (input.trim() !== '') {\n      setMessages([...messages, {\n        text: input,\n        sender: 'user'\n      }]);\n      // Simulate a response from the \"AI\"\n      try {\n        const response = await fetch('/Home', {\n          method: 'POST',\n          headers: {\n            'Content-type': 'application.json'\n          },\n          body: JSON.stringify\n        });\n        const data = await response.json();\n        if (response.ok) {\n          const botMessage = {\n            text: data.response,\n            sender: 'bot'\n          };\n          setMessages(prevMessage => [...prevMessage, botMessage]);\n        } else {\n          const errorMessage = {\n            text: 'error: ' + data.error,\n            sender: 'bot'\n          };\n        }\n      } catch (error) {\n        const errorMessage = {\n          text: 'network Error'\n        };\n        setMessages(prevMessage => [...prevMessage, errorMessage]);\n      }\n      setInput('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uploadPDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-box\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-bubble ${message.sender}`,\n          children: message.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Type a message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSend,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"HDAtGPGcvWga1zf1TBXg51T+tsc=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Home","_s","messages","setMessages","input","setInput","handleSend","trim","text","sender","response","fetch","method","headers","body","JSON","stringify","data","json","ok","botMessage","prevMessage","errorMessage","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Documents/HeyHiJob/Website/client/src/page/Home.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\n\r\nconst Home = () => {\r\n\r\n  // get set function using useState function!\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n\r\n  const handleSend = async () => {\r\n    if (input.trim() !== '') {\r\n      setMessages([...messages, { text: input, sender: 'user' }]);\r\n      // Simulate a response from the \"AI\"\r\n      try {\r\n        const response = await fetch('/Home', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-type': 'application.json',\r\n          },\r\n          body: JSON.stringify\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        if (response.ok) {\r\n          const botMessage = {text: data.response, sender: 'bot'}\r\n\r\n          setMessages(prevMessage => [...prevMessage, botMessage]);\r\n\r\n        } else {\r\n          const errorMessage = {text: 'error: ' + data.error, sender: 'bot'}\r\n        }\r\n      } catch (error) {\r\n        const errorMessage = {text: 'network Error', }\r\n        setMessages(prevMessage => [...prevMessage, errorMessage])\r\n      }\r\n      \r\n      setInput('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className='uploadPDF'></div>\r\n      <div className=\"chat-container\">\r\n      <div className=\"chat-box\">\r\n        {messages.map((message, index) => (\r\n          <div key={index} className={`chat-bubble ${message.sender}`}>\r\n            {message.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"input-box\">\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={e => setInput(e.target.value)}\r\n          \r\n          placeholder=\"Type a message...\"\r\n        />\r\n        <button onClick={handleSend}>Send</button>\r\n      </div>\r\n    </div>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default Home;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}