{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Documents\\\\HeyHiJob\\\\Website\\\\client\\\\src\\\\page\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\n\n// useEffect is used for fetching data in realtime while components is running\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [message, setMessages] = useState('');\n  const [input, setInput] = useState(' ');\n  const handleSend = () => {\n    // trim() function is use to remove both end whitespace of a string!\n\n    if (input.trim()) {\n      setMessages([...message, {\n        text: input,\n        sender: 'user'\n      }]); // what is ...message?\n\n      setTimeout(() => {\n        setMessages(prevMessages => [...prevMessages, {\n          text: `you said ${input}`,\n          sender: 'bot'\n        }]);\n      }, 1000);\n      setInput('');\n    }\n  };\n  useEffect(() => {\n    fetch('http://127.0.0.1:5000/').then(response => response.json()).then(data => setMessages(data.message));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"ojnV8V4y2qVeDr/58GyEwOas86k=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Home","_s","message","setMessages","input","setInput","handleSend","trim","text","sender","setTimeout","prevMessages","fetch","then","response","json","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Documents/HeyHiJob/Website/client/src/page/Home.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\n\r\n// useEffect is used for fetching data in realtime while components is running\r\nconst Home = () => {\r\n  const [message, setMessages] = useState('');\r\n  const [input, setInput] = useState(' ');\r\n\r\n  const handleSend = () => {\r\n    // trim() function is use to remove both end whitespace of a string!\r\n\r\n    if (input.trim()) {\r\n      setMessages([...message, {text: input, sender: 'user'}]); // what is ...message?\r\n\r\n      setTimeout(() => {\r\n        setMessages(prevMessages => [...prevMessages, {text: `you said ${input}`, sender: 'bot'}]);\r\n      }, 1000);\r\n      setInput('');\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetch('http://127.0.0.1:5000/')\r\n    .then(response => response.json()) \r\n    .then(data=>setMessages(data.message));\r\n  }, []); \r\n\r\n  return (\r\n    <div className='chat-container'>\r\n      <div></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAE3C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,OAAO,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,GAAG,CAAC;EAEvC,MAAMU,UAAU,GAAGA,CAAA,KAAM;IACvB;;IAEA,IAAIF,KAAK,CAACG,IAAI,CAAC,CAAC,EAAE;MAChBJ,WAAW,CAAC,CAAC,GAAGD,OAAO,EAAE;QAACM,IAAI,EAAEJ,KAAK;QAAEK,MAAM,EAAE;MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;;MAE1DC,UAAU,CAAC,MAAM;QACfP,WAAW,CAACQ,YAAY,IAAI,CAAC,GAAGA,YAAY,EAAE;UAACH,IAAI,EAAE,YAAYJ,KAAK,EAAE;UAAEK,MAAM,EAAE;QAAK,CAAC,CAAC,CAAC;MAC5F,CAAC,EAAE,IAAI,CAAC;MACRJ,QAAQ,CAAC,EAAE,CAAC;IACd;EACF,CAAC;EACDR,SAAS,CAAC,MAAM;IACde,KAAK,CAAC,wBAAwB,CAAC,CAC9BC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAEb,WAAW,CAACa,IAAI,CAACd,OAAO,CAAC,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEH,OAAA;IAAKkB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC7BnB,OAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV,CAAC;AAAArB,EAAA,CA3BKD,IAAI;AAAAuB,EAAA,GAAJvB,IAAI;AA6BV,eAAeA,IAAI;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}