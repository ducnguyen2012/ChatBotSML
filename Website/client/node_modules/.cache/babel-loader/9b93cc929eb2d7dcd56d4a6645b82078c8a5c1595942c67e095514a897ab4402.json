{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Documents\\\\HeyHiJob\\\\Website\\\\client\\\\src\\\\page\\\\MCQPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MCQPage = () => {\n  _s();\n  const [question, setQuestion] = useState([]);\n  const [error, setError] = useState(null);\n  const [numQuestions, setNumQuestions] = useState('');\n  const [subject, setSubject] = useState('');\n  const handleResponse = data => {\n    const formattedQuestions = Object.values(data).map(q => ({\n      question: q.mcq,\n      options: Object.entries(q.options).map(([key, value]) => ({\n        key,\n        value\n      })),\n      correct: q.correct\n    }));\n    setQuestion(formattedQuestions);\n  };\n  const handleFetchQuestion = () => {\n    fetch('http://127.0.0.1:5000/question', {\n      method: \"POST\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        numQuestions,\n        subject\n      })\n    }).then(response => {\n      if (!response.ok) {\n        throw new error(\"network response not ok\");\n      }\n      return response.json();\n    }).then(data => {\n      handleResponse(data);\n    }).catch(error => {\n      setError(error.message);\n      console.log(\"Error fetching question: \", error);\n    });\n  };\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [feedback, setFeedback] = useState('');\n  const handleOptionClick = (index, optionKey, correctAnswer) => {\n    const selectKey = optionKey;\n    const correct = selectKey === correctAnswer;\n    setSelectedOption({\n      selectKey\n    });\n    setFeedback(correct ? \"Correct!\" : \"It is not correct!\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"\",\n      id: \"\",\n      value: numQuestions,\n      onChange: e => setNumQuestions(e.target.value),\n      placeholder: \"Enter number of question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"\",\n      id: \"\",\n      value: subject,\n      onChange: e => setSubject(e.target.value),\n      placeholder: \"Enter subject of questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFetchQuestion,\n      children: \"upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this), question.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading question...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this) : question.map((q, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [index + 1, \") \", q.question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: q.options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleOptionClick(option.key, q.correct),\n          children: option.value\n        }, option.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [selectedOption && selectedOption === opt, /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"feed back: \", feedback]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"true correctAnswer: \", q.correct]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(MCQPage, \"1HMUS1Yo5eMukVB7scMPvkiE7lU=\");\n_c = MCQPage;\nexport default MCQPage;\nvar _c;\n$RefreshReg$(_c, \"MCQPage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","MCQPage","_s","question","setQuestion","error","setError","numQuestions","setNumQuestions","subject","setSubject","handleResponse","data","formattedQuestions","Object","values","map","q","mcq","options","entries","key","value","correct","handleFetchQuestion","fetch","method","headers","body","JSON","stringify","then","response","ok","json","catch","message","console","log","selectedOption","setSelectedOption","feedback","setFeedback","handleOptionClick","index","optionKey","correctAnswer","selectKey","children","type","name","id","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","option","opt","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Documents/HeyHiJob/Website/client/src/page/MCQPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nconst MCQPage = () => {\r\n  const [question, setQuestion] = useState([])\r\n  const [error, setError] = useState(null);\r\n  const [numQuestions, setNumQuestions] = useState('');\r\n  const [subject, setSubject] = useState('');\r\n\r\n  const handleResponse = (data) => {\r\n    const formattedQuestions = Object.values(data).map(q => ({\r\n      question: q.mcq,\r\n      options: Object.entries(q.options).map(([key, value]) => ({\r\n        key,\r\n        value\r\n      })),\r\n      correct: q.correct\r\n    }));\r\n    setQuestion(formattedQuestions);\r\n  }\r\n\r\n  const handleFetchQuestion = () => {\r\n    fetch('http://127.0.0.1:5000/question', {\r\n      method:\"POST\",\r\n      headers:{\r\n        'Content-type': 'application/json',\r\n      }, \r\n      body: JSON.stringify({\r\n        numQuestions,\r\n        subject,\r\n      }),\r\n    }) \r\n    .then(response => {\r\n      if (!response.ok) {\r\n        throw new error(\"network response not ok\")\r\n      } \r\n      return response.json();\r\n    }) \r\n    .then(data => {\r\n      handleResponse(data);\r\n    })\r\n    .catch(error => {\r\n      setError(error.message)\r\n      console.log(\"Error fetching question: \", error)\r\n    })\r\n  }\r\n  const [selectedOption, setSelectedOption] = useState(null)\r\n  const [feedback, setFeedback] = useState('')\r\n  const handleOptionClick = (index, optionKey, correctAnswer) => {\r\n    const selectKey = optionKey;\r\n    const correct = selectKey === correctAnswer\r\n    setSelectedOption({selectKey})\r\n    setFeedback(correct ? \"Correct!\" : \"It is not correct!\")\r\n  }\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <input type=\"text\" \r\n      name=\"\"\r\n       id=\"\"\r\n       value={numQuestions}\r\n       onChange={(e) => setNumQuestions(e.target.value)} \r\n       placeholder='Enter number of question'/>\r\n      <input type=\"text\" \r\n      name=\"\" \r\n      id=\"\" \r\n      value={subject}\r\n      onChange={(e) => setSubject(e.target.value)}\r\n      placeholder='Enter subject of questions'/>\r\n      <button \r\n      onClick={handleFetchQuestion}>upload</button>\r\n      {error && <p> Error: {error}</p>} \r\n      {question.length === 0 ? (\r\n        <p>Loading question...</p>\r\n      ) : (\r\n        question.map((q, index) => (\r\n        <div key={index}>\r\n          <h3>{index + 1}) {q.question}</h3>\r\n          <ul>\r\n            {q.options.map(option => (\r\n              <button key={option.key} onClick={() => handleOptionClick(option.key, q.correct)}>{option.value}</button>\r\n              \r\n            ))}\r\n          </ul>\r\n          <div>\r\n            {selectedOption && selectedOption === opt}\r\n            <p>feed back: {feedback}</p>\r\n            <p>true correctAnswer: {q.correct}</p>\r\n            \r\n          </div>\r\n        </div>\r\n      ))\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default MCQPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}